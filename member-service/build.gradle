plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.palantir.docker' version '0.36.0'
}

group = 'com.bankpay'
version = '1.0.8'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(path: ':common')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//runtimeOnly 'com.h2database:h2'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.3'

}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	println(tasks.bootJar.outputs.files)

	//이미지 이름
	name rootProject.name.toLowerCase() +'-'+project.name+":"+version

	//어떤 Dockerfile
	dockerfile file("../Dockerfile")

	//어떤 파일들을 Dockerfile 에 복사할 것인가
	files tasks.bootJar.outputs.files

	//Dockerfile에 전달할 것인가
	buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}
